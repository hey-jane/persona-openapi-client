=begin
#Persona API Reference

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2023-01-05
Contact: support@withpersona.com
Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'cgi'

module PersonaAPIClient
  class WebhooksInquiryEventsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Inquiry approved
    # Webhook for the `inquiry.approved` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_approved(opts = {})
      webhook_inquiry_approved_with_http_info(opts)
      nil
    end

    # Inquiry approved
    # Webhook for the &#x60;inquiry.approved&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_approved_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_approved ...'
      end
      # resource path
      local_var_path = '/inquiry.approved'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_approved",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_approved\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Inquiry completed
    # Webhook for the `inquiry.completed` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_completed(opts = {})
      webhook_inquiry_completed_with_http_info(opts)
      nil
    end

    # Inquiry completed
    # Webhook for the &#x60;inquiry.completed&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_completed_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_completed ...'
      end
      # resource path
      local_var_path = '/inquiry.completed'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_completed",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_completed\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Inquiry created
    # Webhook for the `inquiry.created` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_created(opts = {})
      webhook_inquiry_created_with_http_info(opts)
      nil
    end

    # Inquiry created
    # Webhook for the &#x60;inquiry.created&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_created_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_created ...'
      end
      # resource path
      local_var_path = '/inquiry.created'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_created",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_created\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Inquiry declined
    # Webhook for the `inquiry.declined` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_declined(opts = {})
      webhook_inquiry_declined_with_http_info(opts)
      nil
    end

    # Inquiry declined
    # Webhook for the &#x60;inquiry.declined&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_declined_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_declined ...'
      end
      # resource path
      local_var_path = '/inquiry.declined'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_declined",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_declined\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Inquiry expired
    # Webhook for the `inquiry.expired` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_expired(opts = {})
      webhook_inquiry_expired_with_http_info(opts)
      nil
    end

    # Inquiry expired
    # Webhook for the &#x60;inquiry.expired&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_expired_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_expired ...'
      end
      # resource path
      local_var_path = '/inquiry.expired'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_expired",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_expired\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Inquiry failed
    # Webhook for the `inquiry.failed` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_failed(opts = {})
      webhook_inquiry_failed_with_http_info(opts)
      nil
    end

    # Inquiry failed
    # Webhook for the &#x60;inquiry.failed&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_failed_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_failed ...'
      end
      # resource path
      local_var_path = '/inquiry.failed'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_failed",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_failed\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Inquiry marked for review
    # Webhook for the `inquiry.marked-for-review` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_marked_for_review(opts = {})
      webhook_inquiry_marked_for_review_with_http_info(opts)
      nil
    end

    # Inquiry marked for review
    # Webhook for the &#x60;inquiry.marked-for-review&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_marked_for_review_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_marked_for_review ...'
      end
      # resource path
      local_var_path = '/inquiry.marked-for-review'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_marked_for_review",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_marked_for_review\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Inquiry transitioned
    # Webhook for the `inquiry.transitioned` event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [nil]
    def webhook_inquiry_transitioned(opts = {})
      webhook_inquiry_transitioned_with_http_info(opts)
      nil
    end

    # Inquiry transitioned
    # Webhook for the &#x60;inquiry.transitioned&#x60; event. For more info see [Webhooks Overview](https://docs.withpersona.com/docs/webhooks).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :persona_signature Header. An HMAC that you should use to check that requests are authentic. Compare this value with your own digest, computed from the request body and your webhook secret. For more info see [Webhook Best Practices](https://docs.withpersona.com/docs/webhooks-best-practices).
    # @option opts [Integer] :persona_webhook_attempts_made The number of times that Persona has attempted to deliver this webhook. This value is incremented each time Persona attempts to deliver the webhook, regardless of whether the delivery was successful.
    # @option opts [Integer] :persona_webhook_attempts_left The number of times that Persona will attempt to deliver this webhook. This value is decremented each time Persona attempts to deliver the webhook.
    # @option opts [Integer] :persona_webhook_first_attempted_at The time at which Persona first attempted to deliver this webhook. This value is a Unix timestamp in seconds.
    # @option opts [Hash<String, Object>] :request_body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def webhook_inquiry_transitioned_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksInquiryEventsApi.webhook_inquiry_transitioned ...'
      end
      # resource path
      local_var_path = '/inquiry.transitioned'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Persona-Signature'] = opts[:'persona_signature'] if !opts[:'persona_signature'].nil?
      header_params[:'Persona-Webhook-Attempts-Made'] = opts[:'persona_webhook_attempts_made'] if !opts[:'persona_webhook_attempts_made'].nil?
      header_params[:'Persona-Webhook-Attempts-Left'] = opts[:'persona_webhook_attempts_left'] if !opts[:'persona_webhook_attempts_left'].nil?
      header_params[:'Persona-Webhook-First-Attempted-At'] = opts[:'persona_webhook_first_attempted_at'] if !opts[:'persona_webhook_first_attempted_at'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'request_body'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"WebhooksInquiryEventsApi.webhook_inquiry_transitioned",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksInquiryEventsApi#webhook_inquiry_transitioned\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
