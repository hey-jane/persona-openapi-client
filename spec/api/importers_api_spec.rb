=begin
#Persona API Reference

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2023-01-05
Contact: support@withpersona.com
Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'

# Unit tests for PersonaAPIClient::ImportersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ImportersApi' do
  before do
    # run before each test
    @api_instance = PersonaAPIClient::ImportersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ImportersApi' do
    it 'should create an instance of ImportersApi' do
      expect(@api_instance).to be_instance_of(PersonaAPIClient::ImportersApi)
    end
  end

  # unit tests for import_an_account
  # Import Accounts
  # Bulk import accounts by uploading a CSV file.  Each row should be the details for a new account. The columns we allow are:   - reference_id   - name_first   - name_middle   - name_last   - birthdate   - social_security_number   - tags
  # @param data 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [ImportAnAccount201Response]
  describe 'import_an_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_email_address_lists
  # Import Email Address Lists
  # Bulk import email address List Items by uploading a CSV file.  Each row should be the details for a new List Item. The columns we allow are:   - value   - match_type (either &#39;email_address&#39; or &#39;domain&#39;)  A match_type of &#39;email_address&#39; will need to match the entire email address of an individual, while a match_type of &#39;domain&#39; will match on the email address domain of an individual (i.e. all email addresses with domain &#39;gmail.com&#39;).
  # @param data 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [ImportEmailAddressLists201Response]
  describe 'import_email_address_lists test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_geolocation_lists
  # Import Geolocation Lists
  # Bulk import geolocation List Items by uploading a CSV file.  Each row should be the details for a new List Item. The columns we allow are:   - latitude   - longitude   - radius_meters
  # @param data 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [ImportGeolocationLists201Response]
  describe 'import_geolocation_lists test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_government_id_number_lists
  # Import Government ID Number Lists
  # Bulk import government ID number List Items by uploading a CSV file.  Each row should be the details for a new List Item. The columns we allow are:   - id_number   - id_class  Common values for id_class include &#x60;pp&#x60; for passport and &#x60;dl&#x60; for driver license. Please contact us or reach out to [support@withpersona.com](mailto:support@withpersona.com) if you need help getting id_class values.
  # @param data 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [ImportGovernmentIdNumberLists201Response]
  describe 'import_government_id_number_lists test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_ip_address_lists
  # Import IP Address Lists
  # Bulk import IP address List Items by uploading a CSV file.  Each row should be the details for a new List Item. The columns we allow are:   - value  Both IPv4 and IPv6 are supported.
  # @param data 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [ImportIpAddressLists201Response]
  describe 'import_ip_address_lists test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_name_lists
  # Import Name Lists
  # Bulk import name List Items by uploading a CSV file.  Each row should be the details for a new list item. The columns we allow are:   - name_first   - name_last
  # @param data 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [ImportNameLists201Response]
  describe 'import_name_lists test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_phone_number_lists
  # Import Phone Number Lists
  # Bulk import phone number List Items by uploading a CSV file.  Each row should be the details for a new list item. The columns we allow are:   - value
  # @param data 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [ImportPhoneNumberLists201Response]
  describe 'import_phone_number_lists test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_all_importers
  # List all Importers
  # Returns a list of your organization&#39;s importers.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [ListAllAccountsPageParameter] :page 
  # @return [ListAllImporters200Response]
  describe 'list_all_importers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for retrieve_an_importer
  # Retrieve an Importer
  # Retrieve the details of an existing importer.
  # @param importer_id String ID of the importer to fetch
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_inflection Determines casing for the API response
  # @option opts [String] :idempotency_key Ensures the request is idempotent
  # @option opts [String] :persona_version 
  # @option opts [String] :include A comma-separated list of relationship paths. This can be used to customize which related resources will be fully serialized in the &#x60;included&#x60; key in the response. See [Serialization](https://docs.withpersona.com/reference/serialization#inclusion-of-related-resources) for more details.
  # @return [RetrieveAnImporter200Response]
  describe 'retrieve_an_importer test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
